#include <iostream>
using namespace std;

//#define POINTERS_BASICS

void main()
{
	setlocale(LC_ALL, "");
#ifdef POINTERS_BASICS
	int a = 2;
	int* pa = &a;
	cout << a << endl; // вывод переменной "a" на экран
	cout << &a << endl; // взятие адреса переменной "а" прямо при выводе
	cout << pa << endl; // вывод адреса переменной "a", хранящегося в указателе "pa"
	cout << *pa << endl; // разыменователя указателя "pa", и вывод на экран значения по адресу

	int* pb;
	int b = 3;
	pb = &b;
	cout << pb << endl;
	cout << *pb << endl;
	//int - int
	//int* - указатель на int
#endif
	const int n = 5;
	short arr[n] = { 3,5,8,13,21 };
	cout << arr << endl;
	cout << *arr << endl;
	for (int i = 0; i < n; i++)
	{
		cout << *(arr + i) << "\t";
	}
	cout << endl;
}

/*
Указатели:

Часто возникает необходимость вместо самой переменной узнать адрес этой переменной. Для работы с адресами в языке программирования C++ существуют указатели.
Указатель (pointer) - это переменная, которая содержит адрес другой переменной. Адрес оперативной памяти - это число, длиной 4 байта означающее порядковый номер байта в ОЗУ.

Для процессора память представляет собой массив байт. Как и у любого другого массива, у каждого байта в оперативной памяти есть порядковый номер. 
Этот номер и является адресом байта в оперативной памяти. Адреса, как правило, записывают в 16-теричной системе счисления.

16-тиричная система счисления (hexadecimal) предназначена для компактной записи двоичных чисел.
1 шестнадцатеричный разряд включает в себя 4 двоичных разряда. Благодаря этому любую 4-х битную двоичную комбинацию можно подменить 16-теричной цифрой.

1 байт всегда можно представить двухразрядным шестнадцатеричным числом.

Объявление указателей:

Прежде чем использовать указатель, то его нужно объявить. Указатели объявляются следующим образом:

int a = 2;
int* pa = &a;
cout << a << endl;

Для понимания указателей достаточно понимать всего два оператора:
& - оператор взятия адреса (Address-of-operator). Это унарный оператор, который возвращает адрес своего операнда. У этого оператора есть только префиксная форма записи.
* - оператор разыменования (Dereference operator). Это унарный оператор, который возвращает значение по адресу. У этого оператора есть только префиксная форма записи.
Только при объявлении указателя, "*" показывает, что объявляемая переменная - указатель. Во всех остальных случаях, "*" разыменовывает.

Указатели и массивы:
Имя массива является указателем на массив, поскольку содержит адрес нулевого элемента массива, а следовательно и всего массива

Арифметика указателей:
Над указателями можно выполнять арифметические операции:

+
-
++
--

И результат операции всегда будет зависить от размера целевого типа, адрес которого содержит указатель.
Если к указателю на char прибавить единицу, то адрес изменится на 1 байт.
Если к указателю на short прибавить единицу, то адрес изменится на 2 байта.
Int на 4 байта.
Double на 8.
И т.д.

Арифметику указателей можно использовать для доступа к элементам массива. Зная адрес начального элемента массива и прибавив к нему номер элемента, мы получаем соответствующего элемента.
*/